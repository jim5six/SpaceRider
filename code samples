// Reset progress unless holdover awards
    if (!(HoldoverAwards[CurrentPlayer]&HOLDOVER_AWARD_BONUS)) Bonus[CurrentPlayer] = 0;
    if (!(HoldoverAwards[CurrentPlayer]&HOLDOVER_AWARD_BONUS_X)) BonusX[CurrentPlayer] = 1;
    if (!(HoldoverAwards[CurrentPlayer]&HOLDOVER_AWARD_STARS_PROGRESS)) StarsHit[CurrentPlayer] = 0;
    if (!(HoldoverAwards[CurrentPlayer]&HOLDOVER_AWARD_SPINNER_PROGRESS)) TotalSpins[CurrentPlayer] = 0;
    if (!(HoldoverAwards[CurrentPlayer]&HOLDOVER_AWARD_POP_PROGRESS)) PopBumperHits[CurrentPlayer] = 0;






    //      if ((GoalsCompletedFlags[CurrentPlayer]&GOAL_FLAGS_ALL_GOALS_FINISHED)==GOAL_FLAGS_ALL_GOALS_FINISHED) {
      if (GoalsCompletedFlags[CurrentPlayer]==GOAL_FLAGS_ALL_GOALS_FINISHED) {
        SetGameMode(GAME_MODE_WIZARD_START);
      }

#define WIZARD_START_DURATION             5000
#define WIZARD_DURATION                   39000
#define WIZARD_DURATION_SECONDS           39
#define WIZARD_FINISHED_DURATION          5000
#define WIZARD_SWITCH_SCORE               5000
#define HOLDOVER_AWARD_BONUS_X            0x01
#define HOLDOVER_AWARD_BONUS              0x02
#define HOLDOVER_AWARD_STARS_PROGRESS     0x04
#define HOLDOVER_AWARD_SPINNER_PROGRESS   0x08
#define HOLDOVER_AWARD_POP_PROGRESS       0x10

#define GOAL_BONUS_MAX_FINISHED           0x01
#define GOAL_DROP_TARGET_MAX_FINISHED     0x02
#define GOAL_STARS_LEVEL_THREE_FINISHED   0x04
#define GOAL_SPINNER_MAX_FINISHED         0x08
#define GOAL_POP_BUMPER_FRENZY_FINISHED   0x10
#define GOAL_FLAGS_ALL_GOALS_FINISHED     0x1F


    case GAME_MODE_WIZARD_START:
      if (GameModeStartTime==0) {
        BSOS_TurnOffAllLamps();
        StopAudio();
        GameModeStartTime = CurrentTime;
        GameModeEndTime = CurrentTime + WIZARD_START_DURATION;
        PlaySoundEffect(SOUND_EFFECT_WIZARD_MODE_START);
        StartScoreAnimation(WIZARD_MODE_REWARD_SCORE);
        WizardScoring = true;
        GoalsCompletedFlags[CurrentPlayer] = GOAL_BONUS_MAX_FINISHED | GOAL_DROP_TARGET_MAX_FINISHED;
        StarsHit[CurrentPlayer] = 0;
        StarLevel[CurrentPlayer] = 0;
        PopBumperHits[CurrentPlayer] = 0;
        TotalSpins[CurrentPlayer] = 0;
      }

      specialAnimationRunning = true;
      ShowLampAnimation(1, 80, CurrentTime, 1, false, false);

      if (CurrentTime>GameModeEndTime) {
        SetGameMode(GAME_MODE_WIZARD);
        LastWizardTimer = 0xFF;
      }
    break;

    case GAME_MODE_WIZARD:
      if (GameModeStartTime==0) {
        PlayBackgroundSong(SOUND_EFFECT_BACKGROUND_WIZ);
        GameModeStartTime = CurrentTime;
        GameModeEndTime = CurrentTime + WIZARD_DURATION;
      }

      currentWizardTimer = (byte)((CurrentTime-GameModeStartTime)/1000);
      if (currentWizardTimer!=LastWizardTimer) {
        LastWizardTimer = currentWizardTimer;
        for (byte count=0; count<4; count++) {
          if (count!=CurrentPlayer) OverrideScoreDisplay(count, WIZARD_DURATION_SECONDS-LastWizardTimer, true);
        }
        PlaySoundEffect(SOUND_EFFECT_SLING_SHOT);
      }
      
      specialAnimationRunning = true;
      ShowLampAnimation(0, 80, CurrentTime, 14, false, false);
      
      if (CurrentTime>GameModeEndTime) {
        SetGameMode(GAME_MODE_WIZARD_FINISHED);
      }
    break;

    case GAME_MODE_WIZARD_FINISHED:
      if (GameModeStartTime==0) {
        BSOS_TurnOffAllLamps();
        StopAudio();
        GameModeStartTime = CurrentTime;
        GameModeEndTime = CurrentTime + WIZARD_FINISHED_DURATION;
        PlaySoundEffect(SOUND_EFFECT_WIZARD_MODE_FINISHED);
        ShowPlayerScores(0xFF, false, false);
      }

      specialAnimationRunning = true;
      ShowLampAnimation(1, 80, CurrentTime, 15, false, false);

      if (CurrentTime>GameModeEndTime) {
        PlayBackgroundSongBasedOnLevel(StarLevel[CurrentPlayer]);
        SetGameMode(GAME_MODE_UNSTRUCTURED_PLAY);
        WizardScoring = false;
      }
    break; 
    
    
    if (CountGoalsCompleted(CurrentPlayer) >= 5){
                    QueueNotification(SOUND_EFFECT_SUPERSPINNER_WIZARD, 9);
                } else if (CountGoalsCompleted(CurrentPlayer) == 3){
                    QueueNotification(SOUND_EFFECT_SUPERSPINNER_EXTRABALL, 9);
                } else {
                    QueueNotification(SOUND_EFFECT_SUPERSPINNER_GOAL, 9);
                }